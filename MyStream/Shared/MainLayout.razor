@inherits LayoutComponentBase
@inject NavigationManager Navigation

<Layout Sider="true">
    <LayoutSider>
        <LayoutSiderContent>
            <NavMenu />
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutHeader Fixed="true">
            <HeadLayout></HeadLayout>
        </LayoutHeader>
        <LayoutContent>
            <Container Fluid="true" Padding="Padding.Is3.FromTop">
                @Body
            </Container>
        </LayoutContent>
        <LayoutFooter Fixed="true" Display="Display.Block.None.OnWidescreen">
            <Bar Mode="BarMode.Horizontal" Breakpoint="Breakpoint.Mobile" CollapseMode="BarCollapseMode.Small" Background="Background.Secondary" ThemeContrast="ThemeContrast.Dark"
                 Padding="Padding.Is0.FromBottom.Is0.FromTop" Style="text-align: center; display: block;">
                <BarBrand>
                    <Button Color="GetColor(TypeButton.Providers)" To="/" Type="ButtonType.Link" title="Providers">
                        <Blazorise.Icon Name="FontAwesomeIcons.ThLarge" />
                    </Button>
                    <Button Color="GetColor(TypeButton.TMDB)" To="/TMDB" Type="ButtonType.Link" title="TMDB">
                        <Blazorise.Icon Name="FontAwesomeIcons.ThLarge" />
                    </Button>
                    <Button Color="GetColor(TypeButton.IMDB)" To="/IMDB" Type="ButtonType.Link" title="IMDB">
                        <Blazorise.Icon Name="FontAwesomeIcons.ThLarge" />
                    </Button>
                </BarBrand>
            </Bar>
        </LayoutFooter>
    </Layout>
</Layout>

<BlazoredToasts Position="ToastPosition.BottomRight" ShowProgressBar="true" Timeout="10"
                IconType="IconType.FontAwesome" />

@code{
    private enum TypeButton
    {
        Providers, TMDB, IMDB
    }

    private TypeButton CurrentButton;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;

        //ChangeCurrentButton(Navigation.BaseUri);

        //StateHasChanged();
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs args)
    {
        ChangeCurrentButton(args.Location);

        StateHasChanged();
    }

    private void ChangeCurrentButton(string location)
    {
        if (location.Contains("/TMDB")) CurrentButton = TypeButton.TMDB;
        else if (location.Contains("/IMDB")) CurrentButton = TypeButton.IMDB;
        else CurrentButton = TypeButton.Providers;
    }

    private Color GetColor(TypeButton type)
    {
        if (CurrentButton == type)
            return Color.Dark;
        else
            return Color.Secondary;
    }
}