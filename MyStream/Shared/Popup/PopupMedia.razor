@inherits ComponenteCore
@inject IStringLocalizer<App> L

<Modal @ref="modal">
    <ModalContent Centered="true" Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>@media?.title</ModalTitle>
            <CloseButton Clicked="HideModal" />
        </ModalHeader>
        <ModalBody MaxHeight="70">
            @if (Options.HasCustomVisibility)
            {
                <CustomVisibility Options="Options"></CustomVisibility>
            }
            else
            {
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.OnMobile.Is4.OnDesktop">
                        @if (string.IsNullOrEmpty(media.poster_path_large))
                        {
                            //generic image
                        }
                        else
                        {
                            <Div Style="position:relative;">
                                @if (ShowOnlyYear)
                                {
                                    <Badge Color="Color.Light" Style="position: absolute; top: 5px; left: 5px;">@media.release_date?.Year</Badge>
                                }
                                else
                                {
                                    <Badge Color="Color.Light" Style="position: absolute; top: 5px; left: 5px;">@media.release_date?.ToShortDateString()</Badge>
                                }
                                @if (media.rating >= 8)
                                {
                                    <Badge Color="Color.Success" Style="position: absolute; top: 5px; right: 5px;">@media.rating</Badge>
                                }
                                else if (media.rating >= 6)
                                {
                                    <Badge Color="Color.Warning" Style="position: absolute; top: 5px; right: 5px;">@media.rating</Badge>
                                }
                                else if (media.rating > 0)
                                {
                                    <Badge Color="Color.Danger" Style="position: absolute; top: 5px; right: 5px;">@media.rating</Badge>
                                }
                                <Image Source="@media.poster_path_large" Text="@media.title" Style="width: 100%;"></Image>
                            </Div>
                        }
                    </Column>
                    <Column ColumnSize="ColumnSize.Is12.OnMobile.Is8.OnDesktop">
                        <Badge Color="Color.Secondary" Margin="Margin.Is2.FromRight.Is2.FromBottom">@media.runtime.FormatRuntime()</Badge>
                        @foreach (var item in media.Genres)
                        {
                            <Badge Color="Color.Secondary" Margin="Margin.Is2.FromRight.Is2.FromBottom">@item</Badge>
                        }
                        <Paragraph Alignment="TextAlignment.Justified">
                            @media.plot
                        </Paragraph>
                        @if (media.Videos != null && media.Videos.Any())
                        {
                            <Row Gutter="(8, 8)">
                                <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                    <Button Color="Color.Dark" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">Trailers</Button>
                                </Column>
                                @foreach (var item in media.Videos)
                                {
                                    <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                        <Button Type="ButtonType.Link" To="@("https://www.youtube.com/watch?v=" + item.key)" Target="Target.Blank" Color="Color.Light"
                                                Padding="Padding.Is1" title="@item.name" Block="true">
                                            <Blazorise.Icon Name="FontAwesomeIcons.Video"></Blazorise.Icon>
                                        </Button>
                                    </Column>
                                }
                            </Row>
                        }
                        @{
                            if (Providers != null && Providers.results != null && Providers.GetFreeListProviders(Settings.Region).Any())
                            {
                                <Row Gutter="(8, 8)">
                                    <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                        <Button Color="Color.Success" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">@L["Free"]</Button>
                                    </Column>
                                    @foreach (var item in Providers.GetFreeListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                                @if (!AllProviders.Single(s => s.id == item.provider_id.ToString()).models.Any(a => a == DeliveryModel.FREE))
                                                {<span>false</span>}
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetAdsListProviders(Settings.Region).Any())
                            {
                                <Row Gutter="(8, 8)">
                                    <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                        <Button Color="Color.Success" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">@L["Ads"]</Button>
                                    </Column>
                                    @foreach (var item in Providers.GetAdsListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                                @if (!AllProviders.Single(s => s.id == item.provider_id.ToString()).models.Any(a => a == DeliveryModel.AVOD))
                                                {<span>false</span>}
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetFlatRateListProviders(Settings.Region).Any())
                            {
                                <Row Gutter="(8, 8)">
                                    <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                        <Button Color="Color.Success" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">@L["FlatRate"]</Button>
                                    </Column>
                                    @foreach (var item in Providers.GetFlatRateListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                                @if (!AllProviders.Single(s => s.id == item.provider_id.ToString()).models.Any(a => a == DeliveryModel.SVOD))
                                                {<span>false</span>}
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetFlatRateBuyListProviders(Settings.Region).Any())
                            {
                                <Row Gutter="(8, 8)">
                                    <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                        <Button Color="Color.Warning" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">@L["FlatRateBuy"]</Button>
                                    </Column>
                                    @foreach (var item in Providers.GetFlatRateBuyListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                                @if (!AllProviders.Single(s => s.id == item.provider_id.ToString()).models.Any(a => a == DeliveryModel.PVOD))
                                                {<span>false</span>}
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetRentListProviders(Settings.Region).Any())
                            {
                                <Row Gutter="(8, 8)">
                                    <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                        <Button Color="Color.Primary" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">@L["Rent"]</Button>
                                    </Column>
                                    @foreach (var item in Providers.GetRentListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                                @if (!AllProviders.Single(s => s.id == item.provider_id.ToString()).models.Any(a => a == DeliveryModel.TVOD))
                                                {<span>false</span>}
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetBuyListProviders(Settings.Region).Any())
                            {
                                <Row Gutter="(8, 8)">
                                    <Column ColumnSize="ColumnSize.Is4.OnMobile.Is2.OnWidescreen">
                                        <Button Color="Color.Danger" Size="Size.Small" Block="true" Style="height: 100%" Disabled="true">@L["Buy"]</Button>
                                    </Column>
                                    @foreach (var item in Providers.GetBuyListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                                @if (!AllProviders.Single(s => s.id == item.provider_id.ToString()).models.Any(a => a == DeliveryModel.TVOD))
                                                {<span>false</span>}
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                        }
                    </Column>
                </Row>
            }
        </ModalBody>
        <ModalFooter Style="justify-content: space-between;">
            <a href="@media?.homepage" target="_blank" rel="noopener" style="float: left;">@media?.homepage</a>
            <Button Color="Color.Secondary" Clicked="@Atualizar" Disabled="false">Atualizar</Button>
            <Button Color="Color.Secondary" Clicked="@HideModal">@L["Close"]</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modal;

    [Parameter]
    public Services.TMDB.MediaDetailService ServiceDetail { get; set; }

    [Parameter]
    public Services.TMDB.WatchProvidersService ServiceProviders { get; set; }

    [Parameter]
    public bool ShowOnlyYear { get; set; } = true;

    public MediaDetail media { get; set; }
    public MediaProviders Providers { get; set; }

    public List<Provider> AllProviders => ProviderServide.GetAllProviders(Http, StorageService.Local);

    private VisibilityOptions Options => new VisibilityOptions
    {
        Loading = media == null || IsLoading
    };

    public async Task ShowModal(string tmdb_id, MediaType type)
    {
        modal.Show();

        IsLoading = true;

        media = await ServiceDetail.GetMedia(Http, StorageService, Settings, tmdb_id, type);
        Providers = await ServiceProviders.GetProviders(Http, StorageService, Settings, tmdb_id, type);

        IsLoading = false;
    }

    public void HideModal()
    {
        modal.Hide();
    }

    private async Task Atualizar()
    {
        foreach (var item in Providers.GetFreeListProviders(Settings.Region))
        {
            var provider = AllProviders.Single(s => s.id == item.provider_id.ToString());

            var model = DeliveryModel.FREE;

            if (!provider.models.Contains(model))
            {
                provider.models.Add(model);

                provider.models = provider.models.OrderBy(o => o).ToList();
            }
        }

        foreach (var item in Providers.GetAdsListProviders(Settings.Region))
        {
            var provider = AllProviders.Single(s => s.id == item.provider_id.ToString());

            var model = DeliveryModel.AVOD;

            if (!provider.models.Contains(model))
            {
                provider.models.Add(model);

                provider.models = provider.models.OrderBy(o => o).ToList();
            }
        }

        foreach (var item in Providers.GetFlatRateListProviders(Settings.Region))
        {
            var provider = AllProviders.Single(s => s.id == item.provider_id.ToString());

            var model = DeliveryModel.SVOD;

            if (!provider.models.Contains(model))
            {
                provider.models.Add(model);

                provider.models = provider.models.OrderBy(o => o).ToList();
            }
        }

        foreach (var item in Providers.GetBuyListProviders(Settings.Region))
        {
            var provider = AllProviders.Single(s => s.id == item.provider_id.ToString());

            var model = DeliveryModel.TVOD;

            if (!provider.models.Contains(model))
            {
                provider.models.Add(model);

                provider.models = provider.models.OrderBy(o => o).ToList();
            }
        }

        foreach (var item in Providers.GetRentListProviders(Settings.Region))
        {
            var provider = AllProviders.Single(s => s.id == item.provider_id.ToString());

            var model = DeliveryModel.TVOD;

            if (!provider.models.Contains(model))
            {
                provider.models.Add(model);

                provider.models = provider.models.OrderBy(o => o).ToList();
            }
        }

        foreach (var item in Providers.GetFlatRateBuyListProviders(Settings.Region))
        {
            var provider = AllProviders.Single(s => s.id == item.provider_id.ToString());

            var model = DeliveryModel.PVOD;

            if (!provider.models.Contains(model))
            {
                provider.models.Add(model);

                provider.models = provider.models.OrderBy(o => o).ToList();
            }
        }

        StorageService.Local.SetItem("Data/providers.json", AllProviders);
    }
}