@inherits ComponenteCore

<Modal @ref="modal">
    <ModalContent Centered="true" Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>@media?.title</ModalTitle>
            <CloseButton Clicked="HideModal" />
        </ModalHeader>
        <ModalBody MaxHeight="70">
            @if (Options.HasCustomVisibility)
            {
                <CustomVisibility Options="Options"></CustomVisibility>
            }
            else
            {
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.OnMobile.Is4.OnDesktop">
                        @if (string.IsNullOrEmpty(media.poster_path_large))
                        {
                            //generic image
                        }
                        else
                        {
                            <Image Source="@media.poster_path_large" Text="@media.title" Style="width: 100%;"></Image>
                        }
                    </Column>
                    <Column ColumnSize="ColumnSize.Is12.OnMobile.Is8.OnDesktop">
                        <Badge Color="Color.Secondary" Margin="Margin.Is2.FromRight.Is2.FromBottom">@media.runtime.FormatRuntime()</Badge>
                        @foreach (var item in media.Genres)
                        {
                            <Badge Color="Color.Secondary" Margin="Margin.Is2.FromRight.Is2.FromBottom">@item</Badge>
                        }
                        <Paragraph Alignment="TextAlignment.Justified">
                            @media.plot
                        </Paragraph>
                        @if (media.Videos != null && media.Videos.Any())
                        {
                            <Badge Color="Color.Dark" Margin="Margin.Is2.OnY">Videos</Badge>
                            <Row Gutter="(8, 8)">
                                @foreach (var item in media.Videos)
                                {
                                    <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                        <Button Type="ButtonType.Link" To="@("https://www.youtube.com/watch?v=" + item.key)" Target="Target.Blank" Color="Color.Light"
                                                Padding="Padding.Is1" title="@item.name" Block="true">
                                            <Blazorise.Icon Name="FontAwesomeIcons.Video"></Blazorise.Icon>
                                        </Button>
                                    </Column>
                                }
                            </Row>
                        }
                        @{
                            if (Providers != null && Providers.results != null && Providers.GetFlatRateListProviders(Settings.Region).Any())
                            {
                                <Badge Color="Color.Success" Margin="Margin.Is2.OnY">Stream</Badge>
                                <Row Gutter="(8, 8)">
                                    @foreach (var item in Providers.GetFlatRateListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetFlatRateBuyListProviders(Settings.Region).Any())
                            {
                                <Badge Color="Color.Warning" Margin="Margin.Is2.OnY">Stream/Buy</Badge>
                                <Row Gutter="(8, 8)">
                                    @foreach (var item in Providers.GetFlatRateBuyListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetRentListProviders(Settings.Region).Any())
                            {
                                <Badge Color="Color.Primary" Margin="Margin.Is2.OnY">Rent</Badge>
                                <Row Gutter="(8, 8)">
                                    @foreach (var item in Providers.GetRentListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                            if (Providers != null && Providers.results != null && Providers.GetBuyListProviders(Settings.Region).Any())
                            {
                                <Badge Color="Color.Danger" Margin="Margin.Is2.OnY">Buy</Badge>
                                <Row Gutter="(8, 8)">
                                    @foreach (var item in Providers.GetBuyListProviders(Settings.Region))
                                    {
                                        <Column ColumnSize="ColumnSize.Is2.OnMobile.Is1.OnWidescreen">
                                            <Button Target="Target.Blank" Color="Color.Light" Padding="Padding.Is0" title="@item.provider_name">
                                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.provider_name" Style="width: 100%"></Image>
                                            </Button>
                                        </Column>
                                    }
                                </Row>
                            }
                        }
                    </Column>
                </Row>
            }
        </ModalBody>
        <ModalFooter Style="justify-content: space-between;">
            <a href="@media?.homepage" target="_blank" rel="noopener" style="float: left;">@media?.homepage</a>
            <Button Color="Color.Secondary" Clicked="@HideModal">Fechar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modal;

    [Parameter]
    public Services.TMDB.MediaDetailService ServiceDetail { get; set; }

    [Parameter]
    public Services.TMDB.WatchProvidersService ServiceProviders { get; set; }

    public MediaDetail media { get; set; }
    public MediaProviders Providers { get; set; }

    private VisibilityOptions Options => new VisibilityOptions
    {
        Loading = media == null || IsLoading
    };

    public async Task ShowModal(string tmdb_id, TypeMedia type)
    {
        modal.Show();

        IsLoading = true;

        media = await ServiceDetail.GetMedia(Http, StorageService, Settings, tmdb_id, type);
        Providers = await ServiceProviders.GetProviders(Http, StorageService, Settings, tmdb_id, type);

        IsLoading = false;
    }

    public void HideModal()
    {
        modal.Hide();
    }
}