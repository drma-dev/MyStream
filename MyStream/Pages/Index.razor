@page "/"
@inherits ComponenteCore
@using System.Linq
@using MyStream.Core

<RadioGroup TValue="TypeMedia" @bind-CheckedValue="Settings.TypeMedia" Buttons="true" Margin="Margin.Is2.FromBottom">
    <Radio TValue="TypeMedia" Value="@(TypeMedia.movie)"><Blazorise.Icon Name="FontAwesomeIcons.Video"></Blazorise.Icon> Movies</Radio>
    <Radio TValue="TypeMedia" Value="@(TypeMedia.tv)"><Blazorise.Icon Name="FontAwesomeIcons.Tv"></Blazorise.Icon> TV Shows</Radio>
</RadioGroup>

@if (Settings.TypeMedia == TypeMedia.movie)
{
    <Card Margin="Margin.Is3.FromBottom">
        <CardHeader Padding="Padding.Is2">
            Movie Providers (@Settings.Region)
            <RadioGroup TValue="int" @bind-CheckedValue="MovieProviderCount" Buttons="true" Float="Float.Right" Class="btn-group-xs">
                <Radio TValue="int" Value="48">48</Radio>
                <Radio TValue="int" Value="1000">All</Radio>
            </RadioGroup>
        </CardHeader>
        <CardBody Padding="Padding.Is2">
            <Row Gutter="(8,8)">
                @if (AllProviders.Any())
                {
                    @foreach (var item in AllProviders.Where(w => w.types.Any(a => a == Settings.TypeMedia.ToString())).Take(MovieProviderCount))
                    {
                        <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile">
                            <Button Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1" Clicked="@(() => PopupProvider.ShowModal(item))">
                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.name" Class="w-100"></Image>
                            </Button>
                        </Column>
                    }
                }
                else
                {
                    <Column ColumnSize="ColumnSize.Is12">
                        <Alert Color="Color.Primary" Visible="true" Margin="Margin.Is0.FromBottom">
                            <AlertDescription>
                                <Blazorise.Icon Name="FontAwesomeIcons.ExclamationTriangle"></Blazorise.Icon> Não há dados para mostrar
                            </AlertDescription>
                        </Alert>
                    </Column>
                }
            </Row>
        </CardBody>
    </Card>
}
else
{
    <Card Margin="Margin.Is3.FromBottom">
        <CardHeader Padding="Padding.Is2">
            TV Shows Providers (@Settings.Region)
            <RadioGroup TValue="int" @bind-CheckedValue="TVProviderCount" Buttons="true" Float="Float.Right" Class="btn-group-xs">
                <Radio TValue="int" Value="48">48</Radio>
                <Radio TValue="int" Value="1000">All</Radio>
            </RadioGroup>
        </CardHeader>
        <CardBody Padding="Padding.Is2">
            <Row Gutter="(8,8)">
                @if (AllProviders.Any())
                {
                    @foreach (var item in AllProviders.Where(w => w.types.Any(a => a == Settings.TypeMedia.ToString())).Take(TVProviderCount))
                    {
                        <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile">
                            <Button Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1" Clicked="@(() => PopupProvider.ShowModal(item))">
                                <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.name" Class="w-100"></Image>
                            </Button>
                        </Column>
                    }
                }
                else
                {
                    <Column ColumnSize="ColumnSize.Is12">
                        <Alert Color="Color.Primary" Visible="true" Margin="Margin.Is0.FromBottom">
                            <AlertDescription>
                                <Blazorise.Icon Name="FontAwesomeIcons.ExclamationTriangle"></Blazorise.Icon> Não há dados para mostrar
                            </AlertDescription>
                        </Alert>
                    </Column>
                }
            </Row>
        </CardBody>
    </Card>
}

<PopupProvider @ref="PopupProvider"></PopupProvider>

@code {
    public PopupProvider PopupProvider { get; set; }

    public int MovieProviderCount { get; set; } = 48;
    public int TVProviderCount { get; set; } = 48;

    public List<MyStream.Modal.Provider> AllProviders { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        //if (LocalStorage.ContainKey("Region")) { Region = LocalStorage.GetItem<Region>("Region"); }
        //if (LocalStorage.ContainKey("Language")) { Language = LocalStorage.GetItem<Language>("Language"); }

        await LoadProviders(Settings.Region);

        RefreshCore.RegionChanged = new EventCallbackFactory().Create(this, (Region value) => LoadProviders(value));

        IsLoading = false;
    }

    private async Task LoadProviders(Region region)
    {
        AllProviders = (await Http.GetFromJsonAsync<List<Provider>>("Data/providers.json")).Where(w => w.regions.Any(a => a == region.ToString())).ToList();
    }
}