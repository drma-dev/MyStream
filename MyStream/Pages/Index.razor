@page "/"
@inherits ComponenteCore
@using System.Linq
@using MyStream.Core

<Card Margin="Margin.Is3.FromBottom">
    <CardHeader Padding="Padding.Is2">
        Providers (@Settings.Region) 1
        <RadioGroup TValue="int" @bind-CheckedValue="MovieProviderCount" Buttons="true" Float="Float.Right" Class="btn-group-xs">
            <Radio TValue="int" Value="48">48</Radio>
            <Radio TValue="int" Value="1000">All</Radio>
        </RadioGroup>
        <RadioGroup TValue="TypeMedia" @bind-CheckedValue="TypeMedia" Buttons="true" Float="Float.Right" Class="btn-group-xs" Margin="Margin.Is2.FromRight">
            <Radio TValue="TypeMedia" Value="@(TypeMedia.movie)">@TypeMedia.movie.GetName()</Radio>
            <Radio TValue="TypeMedia" Value="@(TypeMedia.tv)">@TypeMedia.tv.GetName()</Radio>
        </RadioGroup>
    </CardHeader>
    <CardBody Padding="Padding.Is2">
        <Row Gutter="(8,8)">
            @if (AllProviders.Any())
            {
                @foreach (var item in AllProviders.Where(w => w.types.Any(a => a == TypeMedia.ToString())).Take(MovieProviderCount))
                {
                    <Column ColumnSize="ColumnSize.Is1.OnFullHD.Is2.OnDesktop.Is3.OnMobile">
                        <Button Color="Color.Primary" Outline="true" Block="true" Padding="Padding.Is1" Clicked="@(() => PopupProvider.ShowModal(item, TypeMedia))">
                            <Image Source="@("https://www.themoviedb.org/t/p/original/" + item.logo_path)" Text="@item.name" Class="w-100"></Image>
                        </Button>
                    </Column>
                }
            }
            else
            {
                <Column ColumnSize="ColumnSize.Is12">
                    <Alert Color="Color.Primary" Visible="true" Margin="Margin.Is0.FromBottom">
                        <AlertDescription>
                            <Blazorise.Icon Name="FontAwesomeIcons.ExclamationTriangle"></Blazorise.Icon> Não há dados para mostrar
                        </AlertDescription>
                    </Alert>
                </Column>
            }
        </Row>
    </CardBody>
</Card>

<PopupProvider @ref="PopupProvider"></PopupProvider>

@code {
    public PopupProvider PopupProvider { get; set; }

    public TypeMedia TypeMedia { get; set; } = TypeMedia.movie;

    public int MovieProviderCount { get; set; } = 48;
    public int TVProviderCount { get; set; } = 48;

    public List<MyStream.Modal.Provider> AllProviders { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        await LoadProviders(Settings.Region);

        RefreshCore.RegionChanged = new EventCallbackFactory().Create(this, (Region value) => LoadProviders(value));

        IsLoading = false;
    }

    private async Task LoadProviders(Region region)
    {
        AllProviders = (await Http.GetFromJsonAsync<List<Provider>>("Data/providers.json")).Where(w => w.regions.Any(a => a == region.ToString())).ToList();
    }
}