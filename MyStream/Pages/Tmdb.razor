@page "/Tmdb"
@inherits PageCore<Tmdb>
@inject HttpClient Http
@using MyStream.Core

<RadioGroup TValue="TypeMedia" @bind-CheckedValue="type" Buttons="true" Margin="Margin.Is2.FromBottom">
    <Radio TValue="TypeMedia" Value="@(TypeMedia.movie)">Movies</Radio>
    <Radio TValue="TypeMedia" Value="@(TypeMedia.tv)">TV Shows</Radio>
</RadioGroup>

@if (type == TypeMedia.movie)
{
    <MyStream.Shared.Card.MediaList @ref="cardMoviePopular" Service="@(new MyStream.Services.TmdbMoviePopularService())" Language="@Language" Region="@Region" CardHeader="Popular (updated daily)" TypeMedia="TypeMedia.Movie"></MyStream.Shared.Card.MediaList>
    <MyStream.Shared.Card.MediaList @ref="cardMovieTopRated" Service="@(new MyStream.Services.TmdbMovieTopRatedService())" Language="@Language" Region="@Region" CardHeader="@($"Top Rated ({Region})")" TypeMedia="TypeMedia.Movie"></MyStream.Shared.Card.MediaList>
    <MyStream.Shared.Card.MediaList @ref="cardMovieUpcoming" Service="@(new MyStream.Services.TmdbMovieUpcomingService())" Language="@Language" Region="@Region" CardHeader="@($"Upcoming ({Region})")" TypeMedia="TypeMedia.Movie" ShowOnlyYear="false"></MyStream.Shared.Card.MediaList>
}
else
{
    <MyStream.Shared.Card.MediaList @ref="cardTvPopular" Service="@(new MyStream.Services.TmdbTvPopularService())" Language="@Language" Region="@Region" CardHeader="Popular (updated daily)" TypeMedia="TypeMedia.Serie"></MyStream.Shared.Card.MediaList>
    <MyStream.Shared.Card.MediaList @ref="cardTVTopRated" Service="@(new MyStream.Services.TmdbTVTopRatedService())" Language="@Language" Region="@Region" CardHeader="@($"Top Rated ({Region})")" TypeMedia="TypeMedia.Serie"></MyStream.Shared.Card.MediaList>
}

@code {
    public MyStream.Shared.Card.MediaList cardMoviePopular { get; set; }
    public MyStream.Shared.Card.MediaList cardTvPopular { get; set; }
    public MyStream.Shared.Card.MediaList cardMovieUpcoming { get; set; }
    public MyStream.Shared.Card.MediaList cardMovieTopRated { get; set; }
    public MyStream.Shared.Card.MediaList cardTVTopRated { get; set; }

    public TypeMedia type { get; set; } = TypeMedia.movie;

    public Region Region { get; set; } = Region.BR;
    public Language Language { get; set; } = Language.ptBR;

    protected override Task OnInitializedAsync()
    {
        if (LocalStorage.ContainKey("Region")) { Region = LocalStorage.GetItem<Region>("Region"); }
        if (LocalStorage.ContainKey("Language")) { Language = LocalStorage.GetItem<Language>("Language"); }

        RefreshCore.RegionChanged = new EventCallbackFactory().Create(this, (Region value) => RefreshListByRegion(value));
        RefreshCore.LanguageChanged = new EventCallbackFactory().Create(this, (Language value) => RefreshListByLanguage(value));

        return base.OnInitializedAsync();
    }

    protected override async Task LoadData()
    {
        //nothing
    }

    private async Task RefreshListByRegion(Region region)
    {
        //await cardMoviePopular.LoadData(region, Language);
        //await cardTvPopular.LoadData(region, Language);
        await cardMovieUpcoming.LoadData(region, Language);
        await cardMovieTopRated.LoadData(region, Language);
        await cardTVTopRated.LoadData(region, Language);
    }

    private async Task RefreshListByLanguage(Language language)
    {
        await cardMoviePopular.LoadData(Region, language);
        await cardTvPopular.LoadData(Region, language);
        await cardMovieUpcoming.LoadData(Region, language);
        await cardMovieTopRated.LoadData(Region, language);
        await cardTVTopRated.LoadData(Region, Language);
    }
}