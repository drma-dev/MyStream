@page "/Imdb"
@inherits ComponenteCore
@inject IStringLocalizer<App> L
@using MyStream.Modal.Enum
@inject Services.IMDB.PopularService PopularService
@inject Services.IMDB.TopRatedService TopRatedService
@inject Services.IMDB.UpcomingService UpcomingService

<HeadPage ImageSource="logo/imdb.png" Text="@L["imdb_desc"]" Link="https://www.imdb.com/"></HeadPage>

<Fields>
    <Field ColumnSize="ColumnSize.IsAuto">
        <Select TValue="MediaType" SelectedValue="@MediaType" SelectedValueChanged="MediaTypeSelectedValueChanged" Size="Size.Small" Style="width: auto;">
            @foreach (var item in EnumHelper.GetList<MediaType>())
            {
                <SelectItem Value="@item.ValueObject">@item.Name</SelectItem>
            }
        </Select>
    </Field>
</Fields>

<CardMediaList @ref="cardPopular" Service="@PopularService" CardHeader="@L["Popular"]" IsIMDB="true"></CardMediaList>
<CardMediaList @ref="cardTopRated" Service="@TopRatedService" CardHeader="@L["TopRated"]" IsIMDB="true"></CardMediaList>
<CardMediaList @ref="cardUpcoming" Service="@UpcomingService" CardHeader="@L["ComingSoon"]" ShowOnlyYear="false"></CardMediaList>

@code {
    public CardMediaList cardPopular { get; set; }
    public CardMediaList cardTopRated { get; set; }
    public CardMediaList cardUpcoming { get; set; }

    public MediaType MediaType { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoading = true;

            await LoadData();

            IsLoading = false;
        }
    }

    protected async Task LoadData()
    {
        await cardPopular.LoadData();
        await cardTopRated.LoadData();
        await cardUpcoming.LoadData();
    }

    private async Task MediaTypeSelectedValueChanged(MediaType value)
    {
        MediaType = value;

        await cardPopular.TypeMediaChanged(value);
        await cardTopRated.TypeMediaChanged(value);
        await cardUpcoming.TypeMediaChanged(value);
    }
}