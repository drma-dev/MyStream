@page "/EditProviders"
@inherits PageCore<EditProviders>
@inject HttpClient Http
@using MyStream.Core

<Button Clicked="@(()=>Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(new TMDB_AllProviders { results = ListData })))" Color="Color.Primary">Show</Button>
<DataGrid @ref="DataGrid" TItem="ProviderBase" Data="@ListData" Filterable="true" Editable="true" EditMode="DataGridEditMode.Popup"
          ShowPager="true" PageSize="10" FilterMethod="DataGridFilterMethod.Contains"
          RowUpdated="RowUpdated">
    <DataGridCommandColumn TItem="ProviderBase" Width="140px">
        <ClearFilterCommandTemplate>
            <Button Color="Color.Secondary" Clicked="@context.Clicked" Size="Size.Small">
                <Blazorise.Icon Name="FontAwesomeIcons.Filter"></Blazorise.Icon>
            </Button>
        </ClearFilterCommandTemplate>
        <NewCommandTemplate>
            <Button Color="Color.Success" Clicked="@context.Clicked" Size="Size.Small">
                <Blazorise.Icon Name="FontAwesomeIcons.Plus"></Blazorise.Icon>
            </Button>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Button Color="Color.Primary" Clicked="@context.Clicked" Size="Size.Small" Margin="Margin.Is1.FromRight">
                <Blazorise.Icon Name="FontAwesomeIcons.Edit"></Blazorise.Icon>
            </Button>
        </EditCommandTemplate>
        <DeleteCommandTemplate>
            <Button Color="Color.Danger" Clicked="@context.Clicked" Size="Size.Small">
                <Blazorise.Icon Name="FontAwesomeIcons.Trash"></Blazorise.Icon>
            </Button>
            <Button Color="Color.Primary" To="@("https://www.google.com/search?q=streaming+" + @context.Item.provider_name)" Type="ButtonType.Link" Target="Target.Blank" Size="Size.Small">
                <Blazorise.Icon Name="FontAwesomeIcons.Link"></Blazorise.Icon>
            </Button>
        </DeleteCommandTemplate>
    </DataGridCommandColumn>
    @*<DataGridColumn TItem="ProviderBase" Field="@nameof(ProviderBase.display_priority)" Caption="display_priority" />*@
    @*<DataGridColumn TItem="ProviderBase" Field="@nameof(ProviderBase.logo_path)" Caption="logo_path" />*@
    <DataGridColumn TItem="ProviderBase" Field="@nameof(ProviderBase.provider_id)" Caption="provider_id" Width="100px" />
    <DataGridColumn TItem="ProviderBase" Field="@nameof(ProviderBase.provider_name)" Caption="provider_name" />
    <DataGridColumn TItem="ProviderBase" Field="@nameof(ProviderBase.provider_desciption)" Caption="provider_desciption" Editable="true" />
    <DataGridColumn TItem="ProviderBase" Field="@nameof(ProviderBase.provider_link)" Caption="provider_link" Editable="true" />
</DataGrid>

@code {
    public DataGrid<ProviderBase> DataGrid { get; set; }
    public List<ProviderBase> ListData { get; set; } = new();

    protected override async Task LoadData()
    {
        var temp = await Http.GetFromJsonAsync<TMDB_AllProviders>("Data/providers.json");
        ListData = temp.results;
    }

    protected void RowUpdated(SavedRowItem<ProviderBase, Dictionary<string, object>> e)
    {
        //
    }
}